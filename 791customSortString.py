'''keys: Solutions:Similar:T:S:'''from typing import Listfrom collections import Counterclass Solution:    # official    # T: O(len(S)+len(T)); S: O(len(T))    def customSortString(self, S, T):        # count[char] will be the number of occurrences of        # 'char' in T.        count = Counter(T)        ans = []        # Write all characters that occur in S, in the order of S.        for c in S:            ans.append(c * count[c])            # Set count[c] = 0 to denote that we do not need            # to write 'c' to our answer anymore.            count[c] = 0        # Write all remaining characters that don't occur in S.        # That information is specified by 'count'.        for c in count:            ans.append(c * count[c])        return "".join(ans)            # self-made     def customSortString(self, S: str, T: str) -> str:        ct = Counter(T)        res = ""        for c in S:            while c in T and ct[c] > 0:                res += c                ct[c] -= 1                        for c in T:            while c not in res or ct[c] > 0:                res += c                ct[c] -= 1        return res            