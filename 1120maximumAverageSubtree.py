'''keys: Solutions:Similar: T:S:'''from typing import List# Definition for a binary tree node.class TreeNode:    def __init__(self, val=0, left=None, right=None):        self.val = val        self.left = left        self.right = right        class Solution:    # T: O(N), S: O(H)    def maximumAverageSubtree(self, root: TreeNode) -> float:        self.res = 0                def helper(root):            if not root: return [0, 0.0]            n1, s1 = helper(root.left)            n2, s2 = helper(root.right)            n = n1 + n2 + 1            s = s1 + s2 + root.val            self.res = max(self.res, s / n)            return [n, s]        helper(root)        return self.res