'''keys: Solutions:Similar: 530 (the same)T:S:'''from typing import List# Definition for a binary tree node.class TreeNode:    def __init__(self, val=0, left=None, right=None):        self.val = val        self.left = left        self.right = right        class Solution:    def __init__(self):        self.res = float("inf")        self.prev = None         # in-order traverse, T: O(N). S: O(1)    def minDiffInBST(self, root: TreeNode) -> int:        if not root:            return self.res        self.minDiffInBST(root.left)        if self.prev != None:            self.res = min(self.res, root.val - self.prev)        self.prev = root.val        self.minDiffInBST(root.right)                return self.res        # def minDiffInBST(self, root: TreeNode) -> int:        