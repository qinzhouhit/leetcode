'''keys: Solutions:Similar: T:S:'''from typing import List# Definition for a binary tree node.class TreeNode:    def __init__(self, val=0, left=None, right=None):        self.val = val        self.left = left        self.right = right        class Solution:    # O(N) for S and T    def trimBST(self, root: TreeNode, L: int, R: int) -> TreeNode:        def trim(node):            if not node:                 return None            elif node.val > R:                # return the root of subtree from the node.left                 return trim(node.left)            elif node.val < L:                # return the root of subtree from the node.right                 return trim(node.right)            else: # within the [L, R]                 node.left = trim(node.left)                 node.right = trim(node.right)                 return node        return trim(root)