'''keys: Solutions:Similar:T:S:'''from typing import Listclass Solution:        # T: O(N), S: O(1)    def thirdMax1(self, nums):        # 1st max, 2nd max, 3rd max        v = [float('-inf'), float('-inf'), float('-inf')]        for num in nums:            if num not in v:                if num > v[0]:   v = [num, v[0], v[1]]                elif num > v[1]: v = [v[0], num, v[1]]                elif num > v[2]: v = [v[0], v[1], num]        return max(nums) if float('-inf') in v else v[2]        # O(N) for S and T    def thirdMax(self, nums: List[int]) -> int:        # Make a Set with the input.        nums = set(nums)        # Find the maximum.        maximum = max(nums)        # Check whether or not this is a case where        # we need to return the *maximum*.        if len(nums) < 3:            return maximum        # Otherwise, continue on to finding the third maximum.        nums.remove(maximum)        second_maximum = max(nums)        nums.remove(second_maximum)        return max(nums)