'''keys: Solutions:Similar:T:S:'''from typing import Listclass Solution:    # T: O(NlogN + N^2) => O(N^2)    # S: O(N) for sorting if not in-place    def threeSumSmaller(self, nums: List[int], target: int) -> int:        nums.sort()                res = 0        for i in range(len(nums)-2):            l = i + 1            r = len(nums) - 1            while l < r:                tmp = nums[i] + nums[l] + nums[r]                if tmp < target:    # since nums[r] >= nums[l], therefore, we can replace     # nums[r] by any number between    # left and right to get a sum less than the target sum                    res += r-l                     l += 1                else:                    r -= 1 # # we need a pair with a smaller sum        return res