'''keys: Solutions:Similar: T:S:'''from typing import Listimport collectionsclass Solution:    # Time complexity is O(n+p) and space complexity is O(p),     # where n = num of words to compare and p = num of word pairs.    def areSentencesSimilar(self, words1: List[str], words2: List[str], pairs: List[List[str]]) -> bool:        if len(words1) != len(words2):            return False                dict_ = collections.defaultdict(set)        for w1, w2 in pairs:            dict_[w1].add(w2)            dict_[w2].add(w1)                    for w1, w2 in zip(words1, words2):            if w2 not in dict_[w1] and w1 != w2:                return False        return True                