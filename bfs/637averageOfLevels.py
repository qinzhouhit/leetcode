'''keys: Solutions:Similar: 102T:S:'''from typing import List# Definition for a binary tree node.class TreeNode:    def __init__(self, val=0, left=None, right=None):        self.val = val        self.left = left        self.right = right                class Solution:        # O(N) for S and T    def averageOfLevels(self, root: TreeNode) -> List[float]:                def dfs(node, level_idx):            if len(levels) == level_idx:                levels.append([])                        levels[level_idx].append(node.val)            if node.left:                dfs(node.left, level_idx+1)            if node.right:                dfs(node.right, level_idx+1)                        levels = []        dfs(root, 0)        return [sum(v)/len(v) for v in levels]            