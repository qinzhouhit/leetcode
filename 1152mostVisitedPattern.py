'''keys: Solutions:Similar: T:S:'''from typing import Listfrom collections import *from itertools import *class Solution:    def mostVisitedPattern(self, username: List[str], timestamp: List[int], website: List[str]) -> List[str]:        packed_tuple = zip(timestamp, username, website)        # (By default tuple always sorted by first item )        sorted_packed_tuple = sorted(packed_tuple) # will return list                mapping = defaultdict(list)        for t, u, w in sorted_packed_tuple:            mapping[u].append(w) # websites in list are in ascending timestamp order                    counter_dict = defaultdict(int)        for website_list in mapping.values():            combs = set(combinations(website_list, 3))            for comb in combs:                counter_dict[comb] += 1                # sort descending by value, then lexicographically        sorted_counter_dict = sorted(counter_dict, key=lambda x: (-counter_dict[x], x))        return sorted_counter_dict[0]                                        