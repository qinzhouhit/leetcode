'''keys: Solutions:Similar:T:S:'''from typing import List# https://leetcode.com/problems/non-overlapping-intervals/discuss/276056/Python-Greedy-Interval-Scheduling'''always pick the interval with the earliest end time. Then you can get the maximal number of non-overlapping intervals. (or minimal number to remove).'''class Solution:    # T: O(NlogN)    # S: O(1)    def eraseOverlapIntervals(self, intervals: List[List[int]]) -> int:        prev_end, ct = float("-inf"), 0        # you can also sort by (x[1], x[0]), but cost more time        intervals.sort(key = lambda x: x[1])        for s, e in intervals:            if s >= prev_end:                prev_end = e            else:                ct += 1        return ct