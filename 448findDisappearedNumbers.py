'''keys: Solutions:Similar: T:S:'''from typing import Listfrom collections import *class Solution:    # T: O(N), S: O(1)    def findDisappearedNumbers1(self, nums: List[int]) -> List[int]:        # Iterate over each of the elements in the original array        for i in range(len(nums)):                        # Treat the value as the new index            new_index = abs(nums[i]) - 1                        # Check the magnitude of value at this new index            # If the magnitude is positive, make it negative             # thus indicating that the number nums[i] has             # appeared or has been visited.            if nums[new_index] > 0:                nums[new_index] *= -1                # Response array that would contain the missing numbers        result = []                    # Iterate over the numbers from 1 to N and add all those        # that have positive magnitude in the array         for i in range(1, len(nums) + 1):            if nums[i - 1] > 0:                result.append(i)                        return result                        # naive    # O(N) for S and T    def findDisappearedNumbers(self, nums: List[int]) -> List[int]:        if not nums: return []        tmp = list(range(1, len(nums)+1))        dict_ = Counter(nums)        res = []        for val in tmp:            if val not in dict_:                res.append(val)        return res                            