'''keys: Solutions:Similar: T:S:'''from typing import Listimport collections    # fancy alternative for Trie:# Trie = lambda: collections.defaultdict(Trie)class Node:    def __init__(self):        self.child = collections.defaultdict(Node)        self.content = ""                class FileSystem(object):    def __init__(self):        self.root = Node()            def find(self, path):#find and return node at path.        curr = self.root        if len(path) == 1:            return self.root        for word in path.split("/")[1:]:            curr = curr.child[word]        return curr            def ls(self, path: str) -> List[str]:        curr = self.find(path)        if curr.content:#file path,return file name            return [path.split('/')[-1]]        return sorted(curr.child.keys())		    def mkdir(self, path: str) -> None:        self.find(path)    def addContentToFile(self, filePath: str, content: str) -> None:        curr = self.find(filePath)        curr.content += content    def readContentFromFile(self, filePath: str) -> str:        curr = self.find(filePath)        return curr.content    obj = FileSystem()print (obj.ls("/"))print (obj.mkdir("/a/b/c"))print (obj.addContentToFile("/a/b/c/d","hello"))print (obj.ls("/"))print (obj.readContentFromFile("/a/b/c/d"))