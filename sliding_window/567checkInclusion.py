'''keys: Solutions:Similar:T:S:'''from typing import Listimport collectionsclass Solution:    # sliding window    # T: O(N+M), where ‘N’ and ‘M’ are the number of characters     # in the input string (s2) and the pattern (s1), respectively.    # S: O(M) since, in the worst case, the whole pattern can have     # distinct characters that will go into the HashMap.    def checkInclusion(self, s1: str, s2: str) -> bool:        p_ct = collections.Counter(s1)                l = 0        matched = 0        for r, c in enumerate(s2):            if c in p_ct:                p_ct[c] -= 1                if p_ct[c] == 0:                    matched += 1            if matched == len(p_ct):                return True                        # if r >= len(s1)-1            if r - l + 1 >= len(s1):                l_c = s2[l]                l += 1                if l_c in p_ct:                    if p_ct[l_c] == 0:                        matched -= 1                    p_ct[l_c] += 1        return False                                        