'''keys: Solutions:Similar: T:S:'''from typing import Listclass Solution:    def exclusiveTime(self, n: int, logs: List[str]) -> List[int]:        '''        let's look between adjacent events, with duration         time - prev_time. If we started a function, and we have a         function in the background, then it was running during this         time. Otherwise, we ended the function that is most recent in         our stack.        '''        res = [0] * n        stack = []        prev_time = 0                for log in logs:            fn, typ, time = log.split(":")            fn, time = int(fn), int(time)                    if typ == "start":                if stack:                    res[stack[-1]] += time - prev_time                stack.append(fn)                prev_time = time # a new function            else:                res[stack.pop()] += time - prev_time + 1                prev_time = time + 1 # end of last epoch, i.e., a new epoch                    return res                