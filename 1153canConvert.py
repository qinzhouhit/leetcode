'''keys: Solutions:Similar:T:S:'''from typing import List# https://leetcode.com/problems/string-transforms-into-another-string/discuss/355382/JavaC%2B%2BPython-Need-One-Unused-Character# https://leetcode.com/problems/string-transforms-into-another-string/discuss/399352/Complete-Logical-Thinking-(This-is-why-only-check-if-str2-has-unused-character)class Solution:    # T: O(N)    # S: O(26)    def canConvert(self, str1: str, str2: str) -> bool:        if str1 == str2:            return True        dp = {}        for c1, c2 in zip(str1, str2):            # dp[i] = j if i not in dp            # dp[i] != j means one letters corresponds to two             # different letters, e.g., "aa" => "bc"            if dp.setdefault(c1, c2) != c2:                return False        # if len(set(str2)) == 26, then we don't have other letter        # to work as a transition bridge        return len(set(str2)) < 26        