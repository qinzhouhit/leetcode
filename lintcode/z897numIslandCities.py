'''keys: Solutions:Similar:T:S:'''from typing import Listclass Solution:    """    @param grid: an integer matrix    @return: an integer     """    def numIslandCities(self, grid):        # Write your code here        if not grid or not grid[0]:            return 0                   res = 0        rows, cols = len(grid), len(grid[0])         for r in range(rows):            for c in range(cols):                self.city = False                if grid[r][c] != 0:                    self.dfs(grid, r, c)                    if self.city:                        res += 1        return res                    def dfs(self, grid, r, c):        if  r < 0 or r >= len(grid) or c < 0 or c >= len(grid[0]) or grid[r][c] == 0:            # print (self.city)            return self.city                        if grid[r][c] == 2:            self.city = True                grid[r][c] = 0        self.dfs(grid, r+1, c)        self.dfs(grid, r-1, c)        self.dfs(grid, r, c+1)        self.dfs(grid, r, c-1)                            