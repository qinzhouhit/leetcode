'''keys: Solutions:Similar:T:S:'''from typing import List# https://supercodead.blogspot.com/2019/07/1463-paper-review.html'''We define that the similarity between two papers is the length of longest similar word subsequence * 2 divided by the total length of two papers.Given two papers, words1, words2 (each represented as an array of strings), and a list of similar pairs of words pairs, find the similarity between the  two papers.Note: Similar relationships are transitive. For example, if "great" is similar to "good" and "find" is similar to "good", then "geat" and "find" are similar.Similarity is also symmetrical. For example, "great" is similar to "good" and "good" is similar to "great".In addition, a word is always similar to itself.'''class Solution:    """    @param words1: the words in paper1    @param words2: the words in paper2    @param pairs: the similar words pair    @return: the similarity of the two papers    """    def getSimilarity(self, words1, words2, pairs):                                                                