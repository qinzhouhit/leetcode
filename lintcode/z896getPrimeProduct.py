'''keys: Solutions:Similar:T:S:'''from typing import Listfrom functools import reduceclass Solution:    """    @param arr: The prime array    @return: Return the array of all of prime product    """    def getPrimeProduct(self, arr):        # Write your code here        if not arr:            return []                    # ans存放arr中各个因子相乘的结果        ans = set()        '''        arr: [2, 3, 5], we have ans as:        {2}        {2, 3, 6}        {2, 3, 5, 6, 10, 30, 15}        '''        for num in arr:            # multiply all values in the arr by num and put it in ans            # add num itself, in the end, remove original number itself            ans |= {x * num for x in ans} # union            # each number should be multiplied, including cur            ans.add(num)                # get rid of originals        return sorted(list(ans - set(arr)))            # dfs    def getPrimeProduct1(self, arr):        idx, product, res = 0, [], []        self.dfs( arr, idx, product, res)        return sorted(res)        def dfs(self, arr, idx, product, res):        if idx == len(arr):            if len(product) > 1 :                res.append( reduce( lambda a, b: a*b, product  ) )            return         product.append(arr[idx])        self.dfs( arr, idx + 1, product, res)        product.pop()                