'''keys: sliding windowSolutions: hashmap containing all characters in the sliding window as keys and their rightmost positions as valuesSimilar: 340T:S:'''from typing import Listimport collectionsclass Solution:    # T: O(N), N as the number of characters in the input string    # S: O(1) for the hashmap    def lengthOfLongestSubstringTwoDistinct(self, s: str) -> int:        n = len(s)        if n < 3:            return n                # sliding window left and right pointers        left, right = 0, 0        # hashmap: character: its rightmost position        # in the sliding window        hashmap = collections.defaultdict(int)                max_len = 2        while right < n:            # sliding window containing less than 3 chars            if len(hashmap) < 3:                hashmap[s[right]] = right                right += 1                        # sliding window containing 3 chars            if len(hashmap) == 3:                # delete the leftmost character                del_idx = min(hashmap.values())                del hashmap[s[del_idx]]                # move the left pointer                 left = del_idx + 1            max_len = max(max_len, right - left)        return max_len                