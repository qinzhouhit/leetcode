'''keys: Solutions:Similar:T:S:'''from typing import List"""Definition of Interval."""class Interval(object):    def __init__(self, start, end):        self.start = start        self.end = endclass Solution:    """    @param seqA: the list of intervals    @param seqB: the list of intervals    @return: the time periods    """    def timeIntersection(self, seqA, seqB):        # Write your code here        if not seqA or not seqB:            return []        # Write your code here        points = []        for item in seqA:            points.append([item.start, -1, 0])            points.append([item.end, 1, 0])        for item in seqB:            points.append([item.start, -1, 1])            points.append([item.end, 1, 1])                points.sort()                output = []        people = [0, 0]        start_count = None                for time, isStart, ab in points:            print(time)            if isStart == -1:                people[ab] = 1            if isStart == 1:                people[ab] = 0            if people[0] == 1 and people[1] == 1 and start_count is None:                start_count = time            elif (people[0] != 1 or people[1] != 1) and start_count is not None:                output.append(Interval(start_count, time))                start_count = None        if start_count is not None:            output.append(Interval(start_count, time))                return output