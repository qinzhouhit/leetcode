'''keys: Solutions:Similar: T:S:'''from typing import Listclass Solution:    # T: O(n); S: O(1)    def findDuplicate1(self, nums: List[int]) -> int:        fast = slow = nums[0]        while True:            slow = nums[slow]            fast = nums[nums[fast]]            if slow == fast:                break # intersection                # find the entrance        slow = nums[0]        while slow != fast:            slow = nums[slow]            fast = nums[fast]        return fast                    # T: O(nlogn); S: O(1); unfortunately sorting is against the requirement    def findDuplicate(self, nums: List[int]) -> int:        if not nums:            return None        nums.sort()        for i in range(1, len(nums)):            if nums[i] == nums[i-1]:                return nums[i]