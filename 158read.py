'''keys: buf and buf4 are the destination, i.e., when "read" and "read4" are called, an integer indicating number of chars will be returned,but at the same time, the chars been read will be stored to buf4 automatically, all you need to do is to store the content from buf4 to buf manually.Solutions:Similar: T:S:'''from typing import Listimport collections# The read4 API is already defined for you.# def read4(buf4: List[str]) -> int:class Solution:    def __init__(self):        self.queue = collections.deque()            def read(self, buf: List[str], n: int) -> int:        """        :type buf: Destination buffer (List[str])        :type n: Number of characters to read (int)        :rtype: The number of actual characters read (int)        """        total = 0        while total < n:            if self.queue:                buf[total] = self.queue.pop()                total += 1            else:                tmp_buf = [' '] * 4                ct = read4(tmp_buf)                if not ct:                    break                for i in range(ct):                    self.queue.appendleft(tmp_buf[i])        return totalsol = Solution()print (sol.read('abc', [1,2,1]))                